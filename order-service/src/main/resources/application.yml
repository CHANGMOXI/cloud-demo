server:
  port: 8080
spring:
  datasource:
    url: jdbc:mysql://localhost:13306/cloud_order?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
  application:
    name: orderservice # 该服务的名称
  cloud:
    nacos:
      server-addr: 43.138.236.83:8848 # Nacos服务地址，Eureka换成Nacos的话要配置这个，同时注释掉Eureka服务地址
      discovery:
#        cluster-name: ShenZhen # orderservice服务的集群名称，这样调用其他服务时，会优先调用本地集群的服务，也就是 ShenZhen集群下的userservice服务
#        namespace: 2efdee67-965c-45d5-9976-7fbf8cc80432 # 命名空间，填ID，用于环境隔离，该命名空间代表dev环境，该命名空间的orderservice服务 无法调用 public命名空间的userservice服务
mybatis:
  type-aliases-package: cn.itcast.user.pojo
  configuration:
    map-underscore-to-camel-case: true
logging:
  level:
    cn.itcast: debug
  pattern:
    dateformat: MM-dd HH:mm:ss:SSS

# Eureka客户端服务注册，只需在服务的配置文件中配置 该客户端服务的名称 和 Eureka服务端的地址
#eureka:
#  client:
#    service-url:
#      defaultZone: http://127.0.0.1:10086/eureka # Eureka服务地址

# 自定义调用某个服务遵循的负载均衡规则，格式: 服务名称:ribbon:NFLoadBalancerRuleClassName:自定义负载均衡规则类
userservice:
  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule # 自定义Ribbon负载均衡规则
    NFLoadBalancerRuleClassName: com.alibaba.cloud.nacos.ribbon.NacosRule # 想要从Nacos中优先调用本地集群的服务，要在这里设置成Nacos的负载均衡规则，同时配置文件和代码里配置的Ribbon负载均衡规则也要注释掉
ribbon:
  eager-load:
    enabled: true # 开启 负载均衡器的饥饿加载
    clients: userservice # 指定 调用哪些服务(服务名称)的负载均衡器 开启饥饿加载，多个服务就用集合的格式
# 基于配置文件自定义Feign日志级别
feign:
#  client:
#    config:
#      default: # default全局生效，如果是服务名称就是局部生效
#        loggerLevel: FULL
  httpclient:
    enabled: true # Feign支持HttpClient
    max-connections: 200 # 最大连接数
    max-connections-per-route: 50 # 单个路径的最大连接数